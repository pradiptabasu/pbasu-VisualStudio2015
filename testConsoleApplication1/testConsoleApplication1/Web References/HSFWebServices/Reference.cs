//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace testConsoleApplication1.HSFWebServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HSFWebServiceSoap", Namespace="http://hyperion.com/hsf/hsfwebservices/")]
    public partial class HSFWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CloseAllEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumCubesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSessionFromTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSessionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumDatabasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumOpenedEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseServerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HSFWebService() {
            this.Url = global::testConsoleApplication1.Properties.Settings.Default.testConsoleApplication1_HSFWebServices_HSFWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CloseAllEntitiesCompletedEventHandler CloseAllEntitiesCompleted;
        
        /// <remarks/>
        public event CloseDatabaseCompletedEventHandler CloseDatabaseCompleted;
        
        /// <remarks/>
        public event EnumCubesCompletedEventHandler EnumCubesCompleted;
        
        /// <remarks/>
        public event EnumEntitiesCompletedEventHandler EnumEntitiesCompleted;
        
        /// <remarks/>
        public event OpenDatabaseCompletedEventHandler OpenDatabaseCompleted;
        
        /// <remarks/>
        public event EnumServersCompletedEventHandler EnumServersCompleted;
        
        /// <remarks/>
        public event CreateSessionCompletedEventHandler CreateSessionCompleted;
        
        /// <remarks/>
        public event CreateSessionFromTokenCompletedEventHandler CreateSessionFromTokenCompleted;
        
        /// <remarks/>
        public event CloseSessionCompletedEventHandler CloseSessionCompleted;
        
        /// <remarks/>
        public event GetSessionInfoCompletedEventHandler GetSessionInfoCompleted;
        
        /// <remarks/>
        public event EnumDatabasesCompletedEventHandler EnumDatabasesCompleted;
        
        /// <remarks/>
        public event EnumOpenedEntitiesCompletedEventHandler EnumOpenedEntitiesCompleted;
        
        /// <remarks/>
        public event OpenServerCompletedEventHandler OpenServerCompleted;
        
        /// <remarks/>
        public event CloseServerCompletedEventHandler CloseServerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/CloseAllEntities", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseAllEntities(string sessionID, bool checkIn, bool releaseLock) {
            this.Invoke("CloseAllEntities", new object[] {
                        sessionID,
                        checkIn,
                        releaseLock});
        }
        
        /// <remarks/>
        public void CloseAllEntitiesAsync(string sessionID, bool checkIn, bool releaseLock) {
            this.CloseAllEntitiesAsync(sessionID, checkIn, releaseLock, null);
        }
        
        /// <remarks/>
        public void CloseAllEntitiesAsync(string sessionID, bool checkIn, bool releaseLock, object userState) {
            if ((this.CloseAllEntitiesOperationCompleted == null)) {
                this.CloseAllEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseAllEntitiesOperationCompleted);
            }
            this.InvokeAsync("CloseAllEntities", new object[] {
                        sessionID,
                        checkIn,
                        releaseLock}, this.CloseAllEntitiesOperationCompleted, userState);
        }
        
        private void OnCloseAllEntitiesOperationCompleted(object arg) {
            if ((this.CloseAllEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseAllEntitiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/CloseDatabase", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseDatabase(string sessionID) {
            this.Invoke("CloseDatabase", new object[] {
                        sessionID});
        }
        
        /// <remarks/>
        public void CloseDatabaseAsync(string sessionID) {
            this.CloseDatabaseAsync(sessionID, null);
        }
        
        /// <remarks/>
        public void CloseDatabaseAsync(string sessionID, object userState) {
            if ((this.CloseDatabaseOperationCompleted == null)) {
                this.CloseDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseDatabaseOperationCompleted);
            }
            this.InvokeAsync("CloseDatabase", new object[] {
                        sessionID}, this.CloseDatabaseOperationCompleted, userState);
        }
        
        private void OnCloseDatabaseOperationCompleted(object arg) {
            if ((this.CloseDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/EnumCubes", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] EnumCubes(string sessionID) {
            object[] results = this.Invoke("EnumCubes", new object[] {
                        sessionID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumCubesAsync(string sessionID) {
            this.EnumCubesAsync(sessionID, null);
        }
        
        /// <remarks/>
        public void EnumCubesAsync(string sessionID, object userState) {
            if ((this.EnumCubesOperationCompleted == null)) {
                this.EnumCubesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumCubesOperationCompleted);
            }
            this.InvokeAsync("EnumCubes", new object[] {
                        sessionID}, this.EnumCubesOperationCompleted, userState);
        }
        
        private void OnEnumCubesOperationCompleted(object arg) {
            if ((this.EnumCubesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumCubesCompleted(this, new EnumCubesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/EnumEntities", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EnumEntities(string sessionID, string entity, string action) {
            object[] results = this.Invoke("EnumEntities", new object[] {
                        sessionID,
                        entity,
                        action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EnumEntitiesAsync(string sessionID, string entity, string action) {
            this.EnumEntitiesAsync(sessionID, entity, action, null);
        }
        
        /// <remarks/>
        public void EnumEntitiesAsync(string sessionID, string entity, string action, object userState) {
            if ((this.EnumEntitiesOperationCompleted == null)) {
                this.EnumEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumEntitiesOperationCompleted);
            }
            this.InvokeAsync("EnumEntities", new object[] {
                        sessionID,
                        entity,
                        action}, this.EnumEntitiesOperationCompleted, userState);
        }
        
        private void OnEnumEntitiesOperationCompleted(object arg) {
            if ((this.EnumEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumEntitiesCompleted(this, new EnumEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/OpenDatabase", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OpenDatabase(string sessionID, string database) {
            this.Invoke("OpenDatabase", new object[] {
                        sessionID,
                        database});
        }
        
        /// <remarks/>
        public void OpenDatabaseAsync(string sessionID, string database) {
            this.OpenDatabaseAsync(sessionID, database, null);
        }
        
        /// <remarks/>
        public void OpenDatabaseAsync(string sessionID, string database, object userState) {
            if ((this.OpenDatabaseOperationCompleted == null)) {
                this.OpenDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenDatabaseOperationCompleted);
            }
            this.InvokeAsync("OpenDatabase", new object[] {
                        sessionID,
                        database}, this.OpenDatabaseOperationCompleted, userState);
        }
        
        private void OnOpenDatabaseOperationCompleted(object arg) {
            if ((this.OpenDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/EnumServers", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] EnumServers(string sessionID) {
            object[] results = this.Invoke("EnumServers", new object[] {
                        sessionID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumServersAsync(string sessionID) {
            this.EnumServersAsync(sessionID, null);
        }
        
        /// <remarks/>
        public void EnumServersAsync(string sessionID, object userState) {
            if ((this.EnumServersOperationCompleted == null)) {
                this.EnumServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumServersOperationCompleted);
            }
            this.InvokeAsync("EnumServers", new object[] {
                        sessionID}, this.EnumServersOperationCompleted, userState);
        }
        
        private void OnEnumServersOperationCompleted(object arg) {
            if ((this.EnumServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumServersCompleted(this, new EnumServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/CreateSession", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateSession(string userName, string password) {
            object[] results = this.Invoke("CreateSession", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSessionAsync(string userName, string password) {
            this.CreateSessionAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void CreateSessionAsync(string userName, string password, object userState) {
            if ((this.CreateSessionOperationCompleted == null)) {
                this.CreateSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSessionOperationCompleted);
            }
            this.InvokeAsync("CreateSession", new object[] {
                        userName,
                        password}, this.CreateSessionOperationCompleted, userState);
        }
        
        private void OnCreateSessionOperationCompleted(object arg) {
            if ((this.CreateSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSessionCompleted(this, new CreateSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/CreateSessionFromToken", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateSessionFromToken(string token) {
            object[] results = this.Invoke("CreateSessionFromToken", new object[] {
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSessionFromTokenAsync(string token) {
            this.CreateSessionFromTokenAsync(token, null);
        }
        
        /// <remarks/>
        public void CreateSessionFromTokenAsync(string token, object userState) {
            if ((this.CreateSessionFromTokenOperationCompleted == null)) {
                this.CreateSessionFromTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSessionFromTokenOperationCompleted);
            }
            this.InvokeAsync("CreateSessionFromToken", new object[] {
                        token}, this.CreateSessionFromTokenOperationCompleted, userState);
        }
        
        private void OnCreateSessionFromTokenOperationCompleted(object arg) {
            if ((this.CreateSessionFromTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSessionFromTokenCompleted(this, new CreateSessionFromTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/CloseSession", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseSession(string sessionID) {
            this.Invoke("CloseSession", new object[] {
                        sessionID});
        }
        
        /// <remarks/>
        public void CloseSessionAsync(string sessionID) {
            this.CloseSessionAsync(sessionID, null);
        }
        
        /// <remarks/>
        public void CloseSessionAsync(string sessionID, object userState) {
            if ((this.CloseSessionOperationCompleted == null)) {
                this.CloseSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseSessionOperationCompleted);
            }
            this.InvokeAsync("CloseSession", new object[] {
                        sessionID}, this.CloseSessionOperationCompleted, userState);
        }
        
        private void OnCloseSessionOperationCompleted(object arg) {
            if ((this.CloseSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/GetSessionInfo", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSessionInfo(string sessionID) {
            object[] results = this.Invoke("GetSessionInfo", new object[] {
                        sessionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSessionInfoAsync(string sessionID) {
            this.GetSessionInfoAsync(sessionID, null);
        }
        
        /// <remarks/>
        public void GetSessionInfoAsync(string sessionID, object userState) {
            if ((this.GetSessionInfoOperationCompleted == null)) {
                this.GetSessionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionInfoOperationCompleted);
            }
            this.InvokeAsync("GetSessionInfo", new object[] {
                        sessionID}, this.GetSessionInfoOperationCompleted, userState);
        }
        
        private void OnGetSessionInfoOperationCompleted(object arg) {
            if ((this.GetSessionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSessionInfoCompleted(this, new GetSessionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/EnumDatabases", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] EnumDatabases(string sessionID) {
            object[] results = this.Invoke("EnumDatabases", new object[] {
                        sessionID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumDatabasesAsync(string sessionID) {
            this.EnumDatabasesAsync(sessionID, null);
        }
        
        /// <remarks/>
        public void EnumDatabasesAsync(string sessionID, object userState) {
            if ((this.EnumDatabasesOperationCompleted == null)) {
                this.EnumDatabasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumDatabasesOperationCompleted);
            }
            this.InvokeAsync("EnumDatabases", new object[] {
                        sessionID}, this.EnumDatabasesOperationCompleted, userState);
        }
        
        private void OnEnumDatabasesOperationCompleted(object arg) {
            if ((this.EnumDatabasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumDatabasesCompleted(this, new EnumDatabasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/EnumOpenedEntities", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EnumOpenedEntities(string sessionID) {
            object[] results = this.Invoke("EnumOpenedEntities", new object[] {
                        sessionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EnumOpenedEntitiesAsync(string sessionID) {
            this.EnumOpenedEntitiesAsync(sessionID, null);
        }
        
        /// <remarks/>
        public void EnumOpenedEntitiesAsync(string sessionID, object userState) {
            if ((this.EnumOpenedEntitiesOperationCompleted == null)) {
                this.EnumOpenedEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumOpenedEntitiesOperationCompleted);
            }
            this.InvokeAsync("EnumOpenedEntities", new object[] {
                        sessionID}, this.EnumOpenedEntitiesOperationCompleted, userState);
        }
        
        private void OnEnumOpenedEntitiesOperationCompleted(object arg) {
            if ((this.EnumOpenedEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumOpenedEntitiesCompleted(this, new EnumOpenedEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/OpenServer", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OpenServer(string sessionID, string server) {
            this.Invoke("OpenServer", new object[] {
                        sessionID,
                        server});
        }
        
        /// <remarks/>
        public void OpenServerAsync(string sessionID, string server) {
            this.OpenServerAsync(sessionID, server, null);
        }
        
        /// <remarks/>
        public void OpenServerAsync(string sessionID, string server, object userState) {
            if ((this.OpenServerOperationCompleted == null)) {
                this.OpenServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenServerOperationCompleted);
            }
            this.InvokeAsync("OpenServer", new object[] {
                        sessionID,
                        server}, this.OpenServerOperationCompleted, userState);
        }
        
        private void OnOpenServerOperationCompleted(object arg) {
            if ((this.OpenServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hyperion.com/hsf/hsfwebservices/CloseServer", RequestNamespace="http://hyperion.com/hsf/hsfwebservices/", ResponseNamespace="http://hyperion.com/hsf/hsfwebservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseServer(string sessionID) {
            this.Invoke("CloseServer", new object[] {
                        sessionID});
        }
        
        /// <remarks/>
        public void CloseServerAsync(string sessionID) {
            this.CloseServerAsync(sessionID, null);
        }
        
        /// <remarks/>
        public void CloseServerAsync(string sessionID, object userState) {
            if ((this.CloseServerOperationCompleted == null)) {
                this.CloseServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseServerOperationCompleted);
            }
            this.InvokeAsync("CloseServer", new object[] {
                        sessionID}, this.CloseServerOperationCompleted, userState);
        }
        
        private void OnCloseServerOperationCompleted(object arg) {
            if ((this.CloseServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CloseAllEntitiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CloseDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void EnumCubesCompletedEventHandler(object sender, EnumCubesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumCubesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumCubesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void EnumEntitiesCompletedEventHandler(object sender, EnumEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void OpenDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void EnumServersCompletedEventHandler(object sender, EnumServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CreateSessionCompletedEventHandler(object sender, CreateSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CreateSessionFromTokenCompletedEventHandler(object sender, CreateSessionFromTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSessionFromTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSessionFromTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CloseSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSessionInfoCompletedEventHandler(object sender, GetSessionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSessionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSessionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void EnumDatabasesCompletedEventHandler(object sender, EnumDatabasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumDatabasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumDatabasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void EnumOpenedEntitiesCompletedEventHandler(object sender, EnumOpenedEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumOpenedEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumOpenedEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void OpenServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CloseServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591